{"version":3,"sources":["components/SuggestionItem.js","components/Main.js","store.js","index.js","App.js"],"names":["SuggestionItem","_ref","data","type","columns","Users","id","Header","accessor","user","concat","get","owner","Requests","r","Apartments","a","toUpperCase","react_default","createElement","es","defaultPageSize","minRows","Main","_useState","useState","_useState2","Object","slicedToArray","searchTerm","setSearchTermState","_useState3","_useState4","suggestions","setSuggestions","searchTermChanged","_ref2","asyncToGenerator","regenerator_default","mark","_callee","term","result","wrap","_context","prev","next","target","value","axios","then","response","t0","sent","groupBy","d","schemaType","stop","this","_x","apply","arguments","className","placeholder","name","onChange","keys","map","key","React","createContext","render","store","setContext","src_store","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.db34eb4e.chunk.js","sourcesContent":["import React from 'react';\nimport ReactTable from 'react-table';\nimport get from 'lodash/get';\n\nimport 'react-table/react-table.css'\n\nexport default ({ data, type }) => {\n  const columns = {\n    Users: [{\n      id: 'name',\n      Header: 'Name',\n      accessor: user => `${get(user, 'profile.firstName', '')} ${get(user, 'profile.lastName', '')}`\n    }, {\n      id: 'email',\n      Header: 'Email',\n      accessor: user => `${get(user, 'emails.0.address', '')}`\n    }, {\n      id: 'owner',\n      Header: 'Owner',\n      accessor: user => `${get(user, 'owner.name', '')} (${user.owner.type})`\n    }],\n    Requests: [{\n      Header: 'Code',\n      accessor: 'code'\n    }, {\n      id: 'booker',\n      Header: 'Booker',\n      accessor: r => `${get(r, 'booker.profile.firstName', '')} ${get(r, 'booker.profile.lastName', '')}`\n    }, {\n      id: 'company',\n      Header: 'Company',\n      accessor: r => `${get(r, 'company.name', '')}`\n    }, {\n      id: 'landlord',\n      Header: 'Landlord',\n      accessor: r => `${get(r, 'landlord.name', '')}`\n    }],\n    Apartments: [{\n      Header: 'Code',\n      accessor: 'code'\n    }, {\n      id: 'address',\n      Header: 'Address',\n      accessor: a => `${get(a, 'address.formattedAddress', '')}`\n    }, {\n      id: 'owner',\n      Header: 'Owner',\n      accessor: a => `${get(a, 'owner.name', '')}`\n    }, {\n      id: 'price',\n      Header: 'Price/Month',\n      accessor: a => `${get(a, 'pricing.price', 0)} ${get(a, 'pricing.currency', '').toUpperCase()}`\n    }]\n  };\n  return <div>\n    <h4>{type}</h4>\n    <ReactTable\n    defaultPageSize={5}\n    minRows={1}\n    data={data}\n    columns={columns[type]}\n  />\n  </div>\n}\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport groupBy from 'lodash/groupBy';\nimport SuggestionItem from './SuggestionItem';\n// import Store from '../store';\n// const API = 'http://localhost:3060';\nconst API = 'https://feature-search-galadriel-api.homelike.xyz'\nexport default () => {\n  const [searchTerm, setSearchTermState] = useState('');\n  const [suggestions, setSuggestions] = useState({});\n\n  const searchTermChanged = async ({ target: { value: term }}) => {\n    setSearchTermState(term);\n    const result = term ? await axios.get(`${API}/search/searchAll?term=${term}`).then(response => response.data): '';\n    if (result && result.data) {\n      const data = groupBy(result.data, d => d.schemaType);\n      setSuggestions(data);\n    } else {\n      setSuggestions({});\n    }\n  }\n\n\treturn (\n    <div>\n\t\t\t<div className=\"container\" id=\"search-container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<input type=\"text\" placeholder=\"Type anything...\" className=\"form-control col-sm-12\" name=\"username\" id=\"username\" value={searchTerm} onChange={searchTermChanged}/>\n\t\t\t\t</div>\n\t\t\t</div>\n      {\n        Object.keys(suggestions).map(type => {\n          return (\n            <div className=\"container\" id=\"suggestion-container\" key={type}>\n              <SuggestionItem  data={suggestions[type]} type={type} />\n            </div>\n          )\n        })\n      }\n\t\t</div>\n\t);\n}\n","import React from 'react';\n\nexport default React.createContext();\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nrender(<App />, document.getElementById('root'));","import React, { useState } from 'react';\n\nimport Main from './components/Main';\n\nimport StoreContext from './store';\n\nexport default () => {\n\tconst [store, setContext] = useState();\n\treturn (\n\t\t<StoreContext.Provider value={{store, setContext}}>\n\t\t\t<Main />\n\t\t</StoreContext.Provider>\n\t);\n}\n"],"sourceRoot":""}